# Copyright 2016 Yahoo Inc. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.
version=12-1-2

longVal long
longWithDefault long default=8589934592

fileVal file
fileWithDefault file

vh[] double range=[-300,300]
bg[] int default=0 range=[-10,10]
gee[] string
storage[].feeder[] string
storage[].distributor[] string

ju[].hu[].tu[] double default=-45 range=[0,1000.1]
ju[].hu[].wu[] enum { HEY, HO} default=HO
ju[].hu[].tang[] bool default=false
ju[].hu[].clan[] int default=45 range=[-90,90]
ju[].hu[].sann reference

foo string
headertemplate string
## If true, the bitvector part of results with number of hits within
## max bin size will be merged into array form before applying static
## rank. NB: Setting this to true may reduce performance.
applystaticranktosmallbitvectors                 bool default=true

## Size of bitvector cache (in bytes).
bitvectorcachesize                                int default=50000000

## Size of boolean occurrence cache (in bytes).
boolocccachesize                                  int default=100000000

## Size of dictionary cache (in bytes).
dictcachesize                                     int default=40000000

onedimstruct[].val string

## Size of document info cache (in bytes).
documentinfocachesize                             int default=25000000

## Size of filter occurrence cache (in bytes).
## This cache is used to optimizse exclusion handling.
## A too small size limit will cause serious performance degradation
## if the staticfilterindexes keyword is used.
filterocccachesize                                int default=30000000

## Size of integer range bitvector cache (in bytes).
intrangebitvectorcachesize                        int default=50000000

## Size of integer occurrence cache (in bytes).
intocccachesize                                   int default=100000000

## Size of phrase occurrence cache (in bytes).
phrasecachesize                                   int default=150000000

## Size of phrase occurrence index cache (in bytes).
phraseidxcachesize                                int default=20000000

## Size of position occurrence cache (in bytes).
posocccachesize                                   int default=100000000

## The filename of a file specifying which hosts that should have
## access to the internal web-server of the fsearch process.
accesslist                                        string default=""

## The filename of the log file for HTTP access.
accesslog                                         string default=""

## The number of threads to perform async occurrence fetch, i.e.
## read from posocc and boolocc files and possibly generation of
## posocc/boolocc arrays for phrases. Async occurrence fetches
## will use more system CPU but can reduce latency on lightly
## loaded systems.
asyncfetchocc                                     int default=0

## specifies the high limit of the ranked result bin.
## If the percentage of the resultset specified in binsize is higher
## than this limit, this will be the max size.
binhigh                                           int default=2147483647

## specifies the lowest possible size of a ranked result. This is
## the lower ramp of the percentage specified in the binsize variable.
binlow                                            int default=10000

## specifies the size of the ranked results as a percentage of the
## total result set size. The percentage can be ramped off with the
## binlow and binhigh variables. NB: Setting this to 100.0 may lead to
## seriously reduced performance.
binsize                                           double default=100.0

## Check cache lines beyond offset + maxhits for blacklisting
## in order to provide correct "totalhits" for queries with many hits.
checktrailingcachelines				bool default=false

## specifies the number of result entries that are processed when
## doing site collapsing. Site collapsing is performed by reordering
## the first collapseentries hits in the result set, listing
## the best hit from each site first.
collapseentries                                   int default=200 range=[0,1000000]

## Specifies what is the default field used for collapse
defaultcollapse                                   string default=""

## specifies the rank penalty for additional hits from a site found
## during site collapsing. When additional hits from a site are
## found, the rank values of those hits are reduced by shifting
## them collapserankshift places to the right.
collapserankshift                                 int default=0

## The maximum number of active and queued requests. Exceeding
## requests will be discarded.
cutofftransportconns                              int default=1024

## specifies the directory where the dataset resides. Only the
## directory needs to be specified. fsearch will then read the config
## files (index.cf) in that directory to discover the structure.
datasetdir                                        string default=""

## If set to "yes", then fallback to the default index if a query
## term specifies a non-existing index. If set to "no", then always
## return 0 hits for a query term that specifies a non-existing index.
## Note that the result set for the entire query might still contain
## hits from other query terms unless the invalid query term was an
## and-term. Default value is "no".
defaultindexfallback                              string default="no"

# ???
docattrhashsize                                   int default=8171
# ???
docidhashsize                                     int default=8171
# ???
docport                                           int default=0

## If present, the result cache is not flushed due to reload operation
## unless the document summaries have changed.
dontflushresultcacheonreload                      bool default=false

## Colon-delimeted list of catalogs for which negative dictionary
## entries should not be cached. Default is unset. Most useful for
## dictionary files that are memorymaped or memorylocked in
## indextune.cf. Note that the list must start and end with a colon (:).
dropnegativedictionarycacheentriescatalogs        string default=""

## specifies a term (used in an ANDNOT) to be used for filtering ALL queries.
excludefilter                                     string default=""

## If set to "yes", use of firstoccproximity is enabled. If set to
## "no", use of firstoccproximity is disabled.
firstoccproximity                                 string default=""

## If present, the filter occurrence cache is flushed due to reload
## operation when all queries using the old configuration has completed.
flushfilteroccscacheonreload                      bool default=false

## Do not use position occurrence information, even though it might
## be present in the index.
forceemptyposoccs                                 bool default=false

## The port to run Fnet Remote Tools (RPC) service on.
## If set to 0, no FRT service is provided.
frtport                                           int default=0

## The directory where gid based blacklist files are found.
## Used for "realtime" indexing setups.
gidblacklistdir				  string default="../gidblacklist"

## A semicolon-separated list of index names and index name prefixes
## defining the set of indexes that are relevant when highlighting
## query keywords. The terms and phrases from the query targeting any
## of these indexes will be highlighted when dynamic teasers are
## generated. In order to separate index names and index name prefixes
## in the list, index name prefixes have a trailing '*'. Note that
## index aliases are treated like actual index names. This means that
## if you have an index relevant for highlighting and an index alias
## pointing to that index, you need to configure both as relevant for
## highlighting if you want to highlight keywords targeting both the
## actual index and the alias. Example config value: "normal*;title".
## Default config value: "*" (highlight all keywords).
highlightindexes                                  string default="*"

# ???
hostname                                          string default=""

## provide a HTTP server at the given port number.
hport                                             int default=8002

## If true, the TCP_NODELAY option is set on the http connections.
## This causes non-full packets to be sent even though previously sent
## data hasn't yet been acknowledged (e.g. due to the delayed ack
## feature present on various tcp stacks).
httpdnodelay                                      bool default=false

# ???
intoccpoolsize                                    int default=32768
# ???
intoccpoolstep                                    int default=32768
# ???
jobqueuethreads                                   int default=5

## Juniper configuration property map.
## currently known keys with defaults:
## [juniper.dynsum.highlight_on]        = "<b>"
## [juniper.dynsum.highlight_off]       = "</b>"
## [juniper.dynsum.continuation]        =  "..."
## [juniper.dynsum.length]              =  "256"
## [juniper.dynsum.min_length]          =  "128"
## [juniper.stem.min_length]            =  "5"
## [juniper.stem.max_extend]            =  "3"
## [juniper.dynsum.surround_max]        =  "128"
## [juniper.dynsum.max_matches]         =  "3"
## [juniper.dynsum.escape_markup]       =  "auto"
## [juniper.matcher.winsize]            = "200"
## [juniper.dynsum.separators]          = "\0x1F\0x1D"
## [juniper.dynsum.connectors]          = "\0x1F\0x1D"
## [juniper.proximity.factor]           = "0.25"
## [juniper.debug_mask]                 = "0"
##
#junipersetup                                      properties

## The maximum number of HTTP connections.
maxhttpconns                                      int default=1024

## The maximum interval between a successful read from a socket
## before timeout, in seconds.
maxsocksilent                                     double default=5.0

## The maximum number of threads to use.
maxthreads                                        int default=100

## The maximum number of active requests at any time. Exceeding
## requests will be queued.
maxtransportconns                                 int default=15

## If present the index to the document summary file (docsum.idx)
## is accessed on disk on each access instead of being cached in
## memory. For experimental use on systems with very many docu-
## ments but very few actual docsum requests.
nodocsumidxinmemory                               bool default=false

## If set then locks on result cache are held only for very
## short intervals and only a single cache element is locked at a
## time. This simplifies the mutex locking order, but cause extra
## load due to queries that would previously first block then use
## cached value now being fully evaluted.
nonblockingresultcache                            bool default=false

## A boolean value controlling removal of several common accented
## uses of characters, used when matching for highlighting.
normalize.accentremoval                           bool default=true

## A boolean value controlling normalizing of LATIN CAPITAL/SMALL
## LIGATURE OE (U+0152 U+0153) to the string "oe", used when matching
## for highlighting.
normalize.ligaturesubstitution                    bool default=true

## A boolean value controlling normalizing of various accented letters
## to two chars, for linguistics compatibility.
normalize.multicharexpansion                      bool default=true

## A boolean value controlling normalizing of LATIN SMALL LETTER SHARP S
## (U+00DF) to the string "ss", used when matching for highlighting.
normalize.sharpssubstitution                      bool default=true

## If true, queries are still handled during the reload operation
## (even when the document summaries have changed). If false then
## queries are stalled until reload has completed.
overlappedreload                                  bool default=true

## The partition number to report to the connecting fdispatch process
## if the dataset label didn't specify the partition number.
partition                                         int default=0

## If set to "yes", use of proximity (cf. proximity and firstoccproximity)
## will affect phrases in addition to single words. If set to "no",
## use of proximity is never used for phrases.
phraseproximity                                   string default=""

## The file name to write the PID of the fsearch process to.
pidfile                                           string default=""

## Minimum value for maximum value of number of 'posocc' entries
## for a word. If set to 0, computed as 2 * binlow.
posbinhigh                                        int default=0

## Maximum value for maximum value of number of 'posocc' entries
## for a word. If set to 0, computed as min(4 * binhigh, 0x7fffffff)
posbinlow                                         int default=0

## The maximum value for number of 'posocc' entries for a word,
## specified as a percentage of the number of documents in the index.
## If more entries are needed for evaluation, posocc entries are not
## used for that word and evaluation will be performed without full
## proximity support. The percentage can be ramped off with the posbinlow
## and posbinhigh variables. If set to 0, computed as 2.0 * binsize.
posbinsize                                        double default=0

## If set to "yes", use of posocc files is enabled, except when
## "forceemptyposoccs" is set or posocc files doesn't exist. If
## set to "no", use of posocc files is disabled.
proximity                                         string default=""

## Selects behavior when proximity can be used for two words but
## not three words while firstoccproximity can be used for three
## words. If set to "yes", then use proximity for two words. If
## set to "no", then use firstoccproximity for three words.
proximitypairbeforefirstoccproximitytriple        string default=""

## Selects behavior when proximity can be used for three words but
## not four words while firstoccproximity can be used for four
## words. If set to "yes", then use proximity for three words. If
## set to "no", then use firstoccproximity for four words. The
## default is "yes".
proximitytriplebeforefirstoccproximityquad        string default=""

## specifies the port number for the persistent internal transport
## protocol provided for a multi-level dispatch system.
ptport                                            int default=8003

## a reference to a rank-profiles.def type configuration
## describing how to rank results.  If empty, fsearch loads
## rank.cf from the dataset directory, see rank.cf(5).
rankcf                                            reference

## specifies a lower limit for the rankvalue of the results
## returned from the search node.
rankcutoff                                        int default=0

## if set, an internal calculation is used for determining a
## rank cutoff value as above.
rankcutoffadvanced                                bool default=false

## Specifies the constant value used in the internal advanced rank
## cutoff calculations done when the rankcutoffadvanced parameter is set.
## This roughly reflects the expected rank contribution of
## one good term.
rankcutoffadvval                                  int default=0

# ???
rankinginfopoolsize                               int default=1048576
# ???
rankinginfopoolstep                               int default=262144
## Grace period (in seconds) after index reload where old index is
## still available.
reloadgraceperiod				  int default=64

## Maximum number of entries in the resultattributescache.
resultattributescachequeries                      int default=0
## Maximum number of entries in the resultattributescache.
## 0 means no limitation.
resultattributescachesize                         int default=5000000

## The maximum lifetime of a resultcache element in seconds.
resultcachemaximumlifetime                        int default=7200
## The minimum lifetime of a resultcache element in seconds.
resultcacheminimumlifetime                        int default=3600

## Maximum number of entries in the resultcache.
## 0 means no limitation.
resultcachequeries                                int default=0
## Maximum size (in bytes) in the resultcache.
resultcachesize                                   int default=50000000

# ???
rewriter.indexes                                  string default=""
# ???
rewriter.langfield                                string default="bsumlanguage"
# ???
rewriter.rootdir                                  string default=""
# ???
#rewritersetup                                     properties

## Set the number of samples a disk is marked as slow before
## starting selftest when no progress occurred during the last
## slowdisksamples samples.
slowdisklatch                                     int default=1

## Set the number of milliseconds to sleep between each sample of
## disk state.
slowdisksamplemillisleep                          int default=100

## Set the number of nanoseconds to sleep between each sample of
## disk state. If 0, use slowdisksamplemillisleep instead.
## Restriction: This option only has effect on FreeBSD
## using the LinuxThreads port.
slowdisksamplenanosleep                           int default=0

## Set the number of contigous disk samples without progress and
## outstanding requests before a disk is detected as slow.
## If zero, automatic slowdisk detection is turned off.
## Recommended value is '20' (when using default values for the
## other slowdisk detection parameters).
slowdisksamples                                   int default=0

# ???
staticfilter                                      string default=""

## specifies a set of indexes for which to optimize exclusion
## handling. Colon is used to separate index names. Default is unset.
## The optimization use entries in the filter occurrence cache, thus
## a too small size limit of the cache will cause serious performance
## degradation.
staticfilterindexes                               string default=""

# ???
strictbind                                        bool default=false

## Specifies a file containing url coded queries to run as part of self
## test initiated when a slow disk has been detected.
testloadfile                                      string default=""

## the type of transport to use.  Currently only "fnet" is available.
transport                                         string default=""

## Specifies the transport access log file used by the http server.
## The real log file name is created by using the strftime function
## with the given argument as template.
transportaccesslog              string 	    default=""

## Specifies the interval between transport access log rotation.
## This is the number of minutes between log rotation, e.g a value
## of 1440 indicates that the log should be rotated every 24 hour.
transportaccesslogcycle         int    	    default=1440

## Specifies the offset from the start of each cycle when the
## transport access log should be cycled automatically. The unit
## is seconds, e.g. a value of 1020 indicates that the log should
## be cycled at 17 minutes past each cycle.
transportaccesslogcycleoffset   int    	    default=0

## Reference to VSM (Vespa Stream Matcher) configuration. If this is
## set, fsearch will run in VSM mode.
vsmconfig                                         reference

## If true, the TCP_NODELAY option is set on the persistent transport
## connections.  This causes non-full packets to be sent even though
## previously sent data hasn't yet been acknowledged (e.g. due to the
## delayed ack feature present on various tcp stacks).
transportnodelay                                  bool default=true

# ???
wordfolder                                        bool default=false
# ???
wordhashsize                                      int default=524269
# ???
wordoccpoolsize                                   int default=2097152
# ???
wordoccpoolstep                                   int default=524288
# ???
wordpoolsize                                      int default=262144
# ???
wordpoolstep                                      int default=65536

## Connect spec for transactionlog server.
tlsspec string default=""

## Document manager config
documentmanagerconfigid reference

functionmodules[]	string restart

specialchars string

tokenlist[].name     string
tokenlist[].tokens[].token string
tokenlist[].tokens[].replace string default=""

afloat double default=34 range=[0,1002]

## qr-searchers:
tag.bold.open string default="<hi>"
tag.bold.close string default="</hi>"
tag.separator string default="<sep />"

## This array contains the built-in searchers that should
## normally always run in a Vespa-S system.  The actual list is
## in the global/ directory on the configserver.
builtin[].searcher string

## If for some reason you need to disable one of the built-in
## searchers you can set this flag to "false".  Handle with great
## care.  You need to match the array index from the global/
## directory, and this may change depending on versions.
builtin[].enabled bool default=true

# some searcher specific configuration parameters:

com.yahoo.prelude.searcher.FieldCollapsingSearcher.collapsesize int default=1
com.yahoo.prelude.searcher.FieldCollapsingSearcher.extrafactor double default=2.0
com.yahoo.prelude.searcher.FieldCollapsingSearcher.collapsefield string default="mid"

com.yahoo.prelude.searcher.BlendingSearcher.numthreads int default=200
com.yahoo.prelude.searcher.BlendingSearcher.docid string default=""

com.yahoo.prelude.searcher.BoldingSearcher.source string default=""

com.yahoo.prelude.searcher.JuniperSearcher.source string default=""
com.yahoo.prelude.searcher.JuniperSearcher.defaultdoctype string default=""

## Query cache that can be placed anywhere in the search chain. Query/Result
## pairs (ie. entries) bigger than maxentrysizebytes will not be cached.
com.yahoo.prelude.searcher.CachingSearcher.cachesizemegabytes int default=100
com.yahoo.prelude.searcher.CachingSearcher.timetoliveseconds int default=3600
com.yahoo.prelude.searcher.CachingSearcher.maxentrysizebytes int default=10000

com.yahoo.prelude.searcher.XMLStringSearcher.source string default=""

## relevancy as measured from the backend will usually be
## normalized into the [0,1000] range to make blending between
## several backends with different relevancy models possible; you
## can elect to skip this if you only have backends using
## relevancy scores that are directly comparable.
com.yahoo.prelude.fastsearch.FastSearcher.skipnormalizing bool default=true

## how many aggregation groups to fetch from the backend
com.yahoo.prelude.grouping.AggregatingSearcher.maxgroups int default=100

com.yahoo.prelude.querytransform.PhrasingSearcher.automatonfile string default=""
com.yahoo.prelude.querytransform.NonPhrasingSearcher.automatonfile string default=""
com.yahoo.prelude.querytransform.TermReplacingSearcher.termlist[] string
com.yahoo.prelude.querytransform.CompleteBoostSearcher.source string default=""

com.yahoo.prelude.querytransform.ExactStringSearcher.source string default=""
com.yahoo.prelude.querytransform.LiteralBoostSearcher.source string default=""
com.yahoo.prelude.querytransform.TermBoostSearcher.source string default=""
com.yahoo.prelude.querytransform.NormalizingSearcher.source string default=""
com.yahoo.prelude.querytransform.StemmingSearcher.source string default=""

com.yahoo.prelude.statistics.StatisticsSearcher.latencybucketsize int default=30


# here users may add their custom searchers
# (all strings should be class names)
customizedsearchers.rawquery[] string
customizedsearchers.transformedquery[] string
customizedsearchers.blendedresult[] string
customizedsearchers.unblendedresult[] string
customizedsearchers.backend[] string
customizedsearchers.argument[].key string
customizedsearchers.argument[].value string

## This is for adding searchers which should be below BlendingSearcher,
## but not be linked to any Vespa cluster (directly).
external[].name string
external[].searcher[] string

# Search cluster specific information.
## Name of search cluster.
searchcluster[].name string default=""

## Names of search definitions served by search cluster.
searchcluster[].searchdef[] string

## configid that may be used to get rank-profiles config for the cluster.
searchcluster[].rankprofiles.configid reference default=""

## Indexing mode of search cluster.
searchcluster[].indexingmode enum { REALTIME, STREAMING } default=REALTIME

## Storage cluster to use for search cluster if indexingmode is streaming.
searchcluster[].storagecluster string default=""

# The available dispatchers on each search cluster
searchcluster[].dispatcher[].host string
searchcluster[].dispatcher[].port int

## The number of least significant bits of the part id used to specify the
## row number (the rest of the bits specifies the column). Don't touch
## this unless you know why you are doing it.
searchcluster[].rowbits int default=0


# 4 search-cluster-specific overrides of global cache parameters:

## Internal searcher cache. Size is measured in megabytes of raw packet
## size. Hits larger than 1% of total cache size will not be cached.
searchcluster[].cache.size int default=1

## Timeout for internal searcher cache. Entries older than this number
## of seconds will be removed from cache. 0 means no cache timeout.
## If cachetimeoutseconds is used, the cache is not purged when reindexing.
searchcluster[].cache.timeout int default=-1

## If timeoutwithpurging is set, the index will be purged (possibly
## gradually) when index switching occurs, even if cache timeout > 0.
## Not used if cache timeout is 0. If searchcluster[].cache.timeout is
## not explicitly set, the global value will be used instead of the one
## set locally.
searchcluster[].cache.timeoutwithpurging bool default=false

## Gradual cache switching causes the index to only be gradually purged
## when cache switching occurs. cacheswitchseconds is the length of the period
## when a given cache entry may be from either the previous or current
## index. Setting it to 0 makes QRS purges the cache entirely when a new
## index becomes available. At the end of the cacheswitchseconds period,
## the cache will be cleaned of any remaining entries from the previous
## index.
searchcluster[].cache.switchseconds int default=-1

# Per dispatcher config-id might be nice to have, remove it until needed.
# searchcluster[].dispatcher[].configid reference

# rank-profiles
## name of this rank profile. maps to table index for internal use.
rankprofile[].name string

## the name of a generic property available to the feature execution framework and feature plugins
rankprofile[].fef.property[].name string

## the value of a generic property available to feature plugins
rankprofile[].fef.property[].value string

## the catalog name overrides apply to
rankprofile[].catalog[].name string

## Boost value for AND queries in this catalog.
rankprofile[].catalog[].andboost int default=0

## Boost value for OR queries in this catalog.
rankprofile[].catalog[].orboost int default=0

## Boost value for ANY queries in this catalog.
rankprofile[].catalog[].anyboost int default=0

## Boost value for NEAR queries in catalog.
rankprofile[].catalog[].nearboost int default=0

## Boost value for ORDEREDNEAR queries in this catalog.
rankprofile[].catalog[].orderednearboost int default=0

## Boost value for phrase queries in this catalog.
rankprofile[].catalog[].phraseboost int default=0

## Boost value for all queries in catalog.
rankprofile[].catalog[].rankboost int default=0

## If true, the context boost is the max value of
## the individual contextboosts.
## When false, the context boost when a term is in
## several contexts is the sum of the individual contextboosts.
rankprofile[].catalog[].bestcontextboostonly bool default=false


## If true, then use extnumoccboost only when calculating rank values.
## Also, do not normalize the extnumoccboost value with
## global term frequency. Default value is false.
rankprofile[].catalog[].extnumoccboostonly bool default=false

## If yes, then use extnumoccboost only when calculating rank values.
## Also, do not normalize the extnumoccboost value with
## global term frequency. Default value is no.
rankprofile[].catalog[].numoccandextnumoccboostonly bool default=false

## If yes, then use bitvectors when possible.
## Default value is false.
rankprofile[].catalog[].preferbitvector bool default=false

## Load extnumoccboost for this catalog from the named file.
## extnumoccboost specifies boost values due to the number of
## occurences of a term that are external to the document. If
## "NULL" is given as file name, then all extnumoccboost values
## will be set to 0.
rankprofile[].catalog[].extnumoccboost.table string default="/home/vespa/conf/vespa/search/ranktables/constant-0000"

## Load numoccboost for this catalog from the named file.
## numoccboost specifies boost values due to the number of occurences in
## a document. If "NULL" is given as file name, then all numoccboost
## values will be set to 0.
rankprofile[].catalog[].numoccboost.table string default="/home/vespa/conf/vespa/search/ranktables/constant-0000"

## Load firstoccboost for catalog from the file named.
## firstoccboost specifies boost values due to the position of the
## first occurence in a document. If "NULL" is given as file name,
## then all firstoccboost values will be set to 0.
rankprofile[].catalog[].firstoccboost.table string default="/home/vespa/conf/vespa/search/ranktables/constant-0000"


## Load firstoccproximityboost for this catalog from the file named.
## firstoccproximity boost specifies boost values due to the correlation between
## positions of the first occurence in a document for two and two words.
##
## If "NULL" is given as file name, then all
## firstoccproximityboost values will be set to 0. If otherwise set,
## should be the name of a file to load into the table. The file
## should have 256 lines each containing a single integer.
##
## There are 256 elements in the table, handling forward distances from 1.
## The corresponding firstoccrevproximityboost table is used
## to handle closeness in reverse order.
##
## The last array index specifies the proximity table set. During
## evaluation, the bigram proximity weight supplied by the query segmenter
## specifies which proximity table set to use, with a fallback to set 0
## when no information is available.
rankprofile[].catalog[].firstoccproximityboost[].table string default="/home/vespa/conf/vespa/search/ranktables/constant-0000"

## Load firstoccrevproximityboost table for this catalog from the named file.
## Specifies boost values due to the correlation between positions
## of the first occurence in a document for two and two words when
## the second word in the query comes first in the document.
## See also firstoccproximityboost above.
rankprofile[].catalog[].firstoccrevproximityboost[].table string default="/home/vespa/conf/vespa/search/ranktables/constant-0000"

## Load proximityboost for this catalog from the named file.
## proximity boost specifies boost values due to the correlation between
## positions of the occurences in a document for two and two words.
## See also firstoccproximityboost above.
rankprofile[].catalog[].proximityboost[].table string default="/home/vespa/conf/vespa/search/ranktables/constant-0000"

## Load revproximityboost for this catalog from the named file.
## revproximity boost specifies boost values due to the correlation between
## positions of the occurences in a document for two and two words.
## See also firstoccproximityboost above.
rankprofile[].catalog[].revproximityboost[].table string default="/home/vespa/conf/vespa/search/ranktables/constant-0000"

## Load divtable for this catalog from the named file.
## Rank values for a query term are divided by the entry
## in divtable indexed by log2 of term frequence.
## The file should contain ?? lines each with a single integer.
rankprofile[].catalog[].divtable string default=""

## The name of a context in this catalog to specify boosts for.
rankprofile[].catalog[].context[].name string

## Boost occurrences in this context with the given value.
## XXX -1 uses default (???) from somewhere(TM).
rankprofile[].catalog[].context[].contextboost int default=0

## Boost pair of occurrences in this context with
## the given value when evaluating 2 words from same catalog in
## parallell.
## XXX -1 uses default (???) from somewhere(TM).
rankprofile[].catalog[].context[].commoncontextboost.pair int default=0

## Boost triple of occurrences in this context with
## the given value when evaluating 3 words from same catalog in
## parallell.
## XXX -1 uses default (???) from somewhere(TM).
rankprofile[].catalog[].context[].commoncontextboost.triple int default=0

## Boost quad of occurrences in this context with
## the given value when evaluating 4 words from same catalog in
## parallell.
## XXX -1 uses default (???) from somewhere(TM).
rankprofile[].catalog[].context[].commoncontextboost.quad int default=0


## The name of the attribute
rankprofile[].attribute[].name string

## Boost value for queries that hit in this attribute
rankprofile[].attribute[].attributecontextboost int default=0

## Load weightboost for this attribute from the named file.
## weightboost specifies boost values due to the weight (weighted set)
## or number of occurences (single, array) in an attribute.
## If "NULL" is given as file name, then all weightboost values will be set to 0.
rankprofile[].attribute[].weightboost.table string default="/home/vespa/conf/vespa/search/ranktables/constant-0000"


## Load static rank values from the given staticrank docattr vector.
## Must be specified in index.cf as a staticrankfile.
rankprofile[].staticrankfile string default=""

## Multiply static rank values with given value when calculating total
## rank value.
rankprofile[].staticcoefficient int default=1

## If false then use only static ranking when sorting result hits.
## Default is true.
rankprofile[].dynamicranking bool default=true

## If dynamic ranking is turned off, then ascending will sort the
## result hits with lowest static rank values first, while
## descending will sort with highest static rank values
## first. Default is descending. This keyword has no effect if
## dynamic ranking is on.
rankprofile[].staticranksortorder string default="descending"

## Load static rank mapping from the file named table. The static
## rank mapping maps each 8-bit static rank value into a 32-bit static
## rank value. This option may only be used with 8-bit static rank files.
rankprofile[].staticrankmap string default=""

## If set to "true", total rank will be reduced when dynamic rank is less than
## 25% of static rank, to suppress irrelevant hits from popular sites.
## If set to "false", total rank is not reduced.
rankprofile[].clampstaticrank bool default=false

## Load document datetime values used for freshness boost calculation from
## this file. The values must be coded as minutes since
## 1900-01-01T00:00Z. The value 0 has the special meaning
## "no datetime value exists".
rankprofile[].freshnessboost.file string default=""

## Load freshnessboost lookup-table values from the file named
## table instead of using built-in default values. The file must
## contain 32 white-space separated non-negative integers.
rankprofile[].freshnessboost.table string default="/home/vespa/conf/vespa/search/ranktables/constant-0000"

## When calculating the freshness boost value multiply difference between
## current datetime and document datetime with timeoffset before taking
## the base-2 logarithm. Default value is 1. Max value is 31.
rankprofile[].freshnessboost.timeoffset int default=1

## If a document has datetime value 0, then use defaultboostvalue
## as freshness boost value instead of doing table lookup. The default
## default value is 0 (no boost).
rankprofile[].freshnessboost.defaultboostvalue int default=0

## Multiply freshness boost value with coefficient when calculating
## total freshness boost value. If coefficient 0 is used, no freshness
## boost value will be computed or added. Default value is 0.
rankprofile[].freshnessboost.coefficient int default=0

## boost table files for distance ranking, 1 dimension.
## The tables have 465 elements each, where slots 0..15 represents
## distances 0..15 while the remaining slots represents distance
## (16 + (slot & 15)) << ((slot >> 4) - 1).  Linear interpolation is
## used for distances "between" table slots.
##
## If "NULL" is given as the file name then all 1D distance boost values
## for that table will be set to 0.
rankprofile[].distance1dboosttable[].table string

## boost table files for distance ranking, 2 dimensions.
## The tables have 977 elements each, where slots 0..15 represents
## square of distance being 0..15 while the remaining slots represents
## square of distance distance being
## (16 + (slot & 15)) << ((slot >> 4) - 1). Linear interpolation is
## used for distances "between" table slots.
##
## If "NULL" is given as the file name then all 2D distance boost values
## for that table will be set to 0.
rankprofile[].distance2dboosttable[].table string

## The lowest possible size of a ranked result. This is the lower ramp
## of the percentage specified in the binsize variable. The default is
## specified in fsearchrc.
rankprofile[].binlow int default=-1

## The high limit of the ranked result bin. If the percentage of the
## resultset specified in binsize is higher than this limit, this will be
## the max size. The default is specified in fsearchrc.
rankprofile[].binhigh int default=-1

## The size of the ranked results as a percentage of the total result
## set size. The percentage can be ramped off with the binlow and binhigh
## variables. The default is specified in fsearchrc.
rankprofile[].binsize double default=-1

## Minimum value for maximum value of number of 'posocc' entries for a word.
## The default is specified in fsearchrc.
rankprofile[].posbinlow int default=-1

## Maximum value for maximum value of number of 'posocc' entries for a word.
## The default is specified in fsearchrc.
rankprofile[].posbinhigh int default=-1

## The maximum value for number of 'posocc' entries for a word, specified
## as a percentage of the number of documents in the index.  If more
## entries are needed for evaluation, posocc entries are not used for that
## word and evaluation will be performed without full proximity support.
## The percentage can be ramped off with the posbinlow and posbinhigh
## variables. The default is specified in fsearchrc.
rankprofile[].posbinsize int default=-1

## After all other rank calculations, the rank value is tuned according
## to the tunefactor and tunebias values. The rank value is modified
## as follows: new_rank = old_rank * tunefactor + tunebias.
rankprofile[].tunefactor double default=1.0

## After all other rank calculations, the rank value is tuned according
## to the tunefactor and tunebias values. The rank value is modified
## as follows: new_rank = old_rank * tunefactor + tunebias.
rankprofile[].tunebias int default=0

## A lower limit for the rankvalue of the results returned from the
## search node.  If rankcutoff.advanced is set to "true", determines
## the constant value used in the internal advanced rank cutoff
## calculations.  This roughly reflects the expected rank contribution
## of one good term.
## The rankcutoff.val value and the rankcutoff.advanced parameter
## may be used if you only want hits with a minimum relevancy to show
## up in the resultset.
## A value below zero means no rankcutoff is done.
rankprofile[].rankcutoff.val int default=-1

## When rankcutoff.val is in use, this flag controls whether to use
## an internal calculation is used for determining the rank cutoff
## value. If "false", use rankcutoff.val as a direct lower limit.
rankprofile[].rankcutoff.advanced bool default=false

## If set to "ON", use of posocc files is enabled, except when
## "forceemptyposoccs" is set in fsearchrc or posocc files doesn't exist.
## If set to "OFF", use of posocc files is disabled.
## If "NOTSET" the fsearchrc "proximity" parameter is used instead.
rankprofile[].proximity.full.enable enum { OFF, ON, NOTSET } default=NOTSET

## If set to "ON", use of firstoccproximity is enabled.
## If set to "OFF", use of firstoccproximity is disabled.
## When NOTSET use the firstoccproximity value in fsearchrc configuration.
rankprofile[].proximity.firstocc.enable enum { OFF, ON, NOTSET } default=NOTSET

## If set to "ON", use of proximity (cf. proximity and firstoccproximity)
## will affect phrases in addition to single words.
## If set to "OFF", proximity is never used for phrases.
## When NOTSET use the phraseproximity value in fsearchrc configuration.
rankprofile[].proximity.phrase.enable enum { OFF, ON, NOTSET } default=NOTSET

## Selects behavior when proximity can be used for two words but not three
## words while firstoccproximity can be used for three words.
## If set to "ON", then use proximity for two words.
## If set to "OFF", then use firstoccproximity for three words.
## When NOTSET use the proximitypairbeforefirstoccproximitytriple value
## in fsearchrc configuration.
rankprofile[].proximity.pairbeforefirstocctriple.enable enum { OFF, ON, NOTSET } default=NOTSET

## Selects behavior when proximity can be used for three words but not four
## words while firstoccproximity can be used for four words.
## If set to "ON", then use proximity for three words.
## If set to "OFF", then use firstoccproximity for four words.
## When NOTSET use the proximitytriplebeforefirstoccproximityquad value
rankprofile[].proximity.triplebeforefirstoccquad.enable enum { OFF, ON, NOTSET } default=NOTSET
