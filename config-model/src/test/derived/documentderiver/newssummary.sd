# Copyright 2016 Yahoo Inc. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.
search newssummary {

  document newssummary {

    field title type string {
      indexing: summary | index
      # index-to: title, titleabstract, default
      stemming: none
      alias: headline
    }

    field abstract type string {
      indexing: summary | index
      # index-to: abstract, titleabstract, default
      stemming: none
    }

    field sourcename type string {
      indexing: summary | index
      # index-to: sourcename, source
      stemming: none
    }

    field providername type string {
      indexing: summary | index
      # index-to: providername, source
      stemming: none
      alias: provider
    }

    field thumburl type string {
      indexing: summary | lowercase | tokenize | index
      stemming: none
    }

    field thumbwidth type int {
      indexing: summary | index
    }

    field thumbheight type int {
      indexing: summary | index
    }

    field language type string {
      indexing: summary | index
      # index-to: language, languages
      stemming: none
    }

    field crawldocid type string {
      indexing: summary
      stemming: none
    }

    field url type uri {
      indexing: summary | lowercase | tokenize | index
      stemming: none
    }

    field sourceurl type uri {
      indexing: summary | lowercase | tokenize | index
      stemming: none
    }

    field categories type string {
      indexing: summary | index
      stemming: none
      alias: category
      alias: cat
    }

    field pubdate type long {
      indexing: summary | index | attribute pubdate | set_var tmppubdate
      alias: date
    }

    field expdate type long {
      indexing: summary | index
    }

    field fingerprint type int {
      indexing: summary | index 
    }

    field debug type string {
      indexing {

        # Initialize variables used for superduper ranking
        0 | set_var superduperus | set_var superdupereu | set_var superduperasia;

        input debug | lowercase | summary | normalize | tokenize | index;
        input debug | lowercase | split ";" | for_each {
          # Loop through each token in debug string
          switch {
            case "superduperus": 10 | set_var superduperus;
            case "superdupereu": 10 | set_var superdupereu;
            case "superduperasia": 10 | set_var superduperasia;
          }
        };  
      }
      indexing-rewrite: none
      stemming: none
    }

    field attributes type string {
      indexing {

        # Initialize variables used for superduper ranking
        1 | set_var superdupermod;

	input attributes | lowercase | summary | normalize | tokenize | index;
        input attributes | lowercase | split ";" | for_each {
          # Loop through each token in attributes string
          switch {

            # De-rank PR articles using the following rules:
            #   1. Set editedstaticrank to '1'
            #   2. Subtract 2.5 hours (9000 seconds) from timestamp used in ranking
            #   3. No superduper rank
            case "typepr": 1 | set_var tmpsourcerank | get_var tmppubdate - 9000 | set_var tmppubdate | 0 | set_var superdupermod;
          }
        };  
      }
      indexing-rewrite: none
      stemming: none
    }

    field searchcluster type string {
      indexing: summary
      stemming: none
    }

    field eustaticrank type int {
      indexing {
        get_var tmpsourcerank * 4000 + get_var superdupereu * get_var superdupermod * 1000 + get_var tmppubdate * 0.5 | summary | index | attribute eustaticrank;
      }
    }

    field usstaticrank type int {
      indexing {
        get_var tmpsourcerank * 4000 + get_var superduperus * get_var superdupermod * 1000 + get_var tmppubdate * 0.5 | summary | index | attribute usstaticrank;
      }
    }

    field asiastaticrank type int {
      indexing {
        get_var tmpsourcerank * 4000 + get_var superduperasia * get_var superdupermod * 1000 + get_var tmppubdate * 0.5 | summary | index | attribute asiastaticrank;
      }
    }
  }

  rank-profile date {
  }

  rank-profile usrank inherits default {
  }

  rank-profile eurank inherits default {
  }

  rank-profile asiarank inherits default {
  }

}
