// Copyright 2016 Yahoo Inc. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.

#pragma once

#include "metric.h"
#include <vespa/vespalib/util/regexp.h>

namespace metrics {

class TextWriter : public MetricVisitor {
    uint32_t _period;
    std::ostream& _out;
    std::vector<std::string> _path;
    vespalib::Regexp _regex;
    bool _verbose;

public:
    TextWriter(std::ostream& out, uint32_t period,
               const std::string& regex, bool verbose);

    virtual bool visitSnapshot(const MetricSnapshot&);
    virtual void doneVisitingSnapshot(const MetricSnapshot&);
    virtual bool visitMetricSet(const MetricSet& set, bool);
    virtual void doneVisitingMetricSet(const MetricSet&);
    virtual bool visitCountMetric(const AbstractCountMetric&,
                                  bool autoGenerated);
    virtual bool visitValueMetric(const AbstractValueMetric&,
                                  bool autoGenerated);

private:
    bool writeCommon(const Metric& m);
};

}

