accesslog "/home/vespa/logs/vespa/foo.log"
partialsd "global"
partialsd2 "global2"
asyncfetchocc 10
a 0
b 1
c 67
d 89
e 4
onlyindef 45
listenport 13700
rangecheck2 10
rangecheck3 10
rangecheck1 10.0
mode BATCH
functionmodules[0]
storage[0]
search[3]
search[0].feeder[1]
search[0].feeder[0] "foofeeder"
search[1].feeder[4]
search[1].feeder[0] "barfeeder1_1"
search[1].feeder[1] "sportsfeeder1"
search[1].feeder[2] ""
search[1].feeder[3] "barfeeder2_1"
search[2].feeder[2]
search[2].feeder[0] ""
search[2].feeder[1] "bazfeeder"
f[0]
config[0]
routingtable[0]
speciallog[1]
speciallog[0].filehandler.name "QueryAccessLog"
speciallog[0].filehandler.pattern "logs/vespa/qrs/QueryAccessLog.%Y%m%d%H%M%S"
speciallog[0].filehandler.rotation "0 1 ..."
speciallog[0].cachehandler.name "QueryAccessLog"
speciallog[0].name "QueryAccessLog"
speciallog[0].type "file"
speciallog[0].cachehandler.size 1000
rulebase[4]
rulebase[0].name "cjk"
rulebase[0].rules "# Use unicode equivalents in java source:\n#\n#   佳:\u4f73\n#   能:\u80fd\n#   索:\u7d22\n#   尼:\u5c3c\n#   惠:\u60e0\n#   普:\u666e\n\n@default\n\na索 -> 索a;\n\n[brand] -> brand:[brand];\n\n[brand] :- 索尼,惠普,佳能;\n"
rulebase[1].name "common"
rulebase[1].rules "## Some test rules\n\n# Spelling correction\nbahc -> bach;\n\n# Stopwords\nsomelongstopword -> ;\n[stopword] -> ;\n[stopword] :- someotherlongstopword, yetanotherstopword;\n\n# \n[song] by [artist] -> song:[song] artist:[artist];\n\n[song] :- together, imagine, tinseltown;\n[artist] :- youngbloods, beatles, zappa;\n\n# Negative\nvarious +> -kingz;\n\n\n"
rulebase[2].name "egyik"
rulebase[2].rules "@include(common.sr)\n@automata(/home/vespa/etc/vespa/fsa/stopwords.fsa)\n[stopwords] -> ;\n\n"
rulebase[3].name "masik"
rulebase[3].rules "@include(common.sr)\n[stopwords] :- etaoin, shrdlu;\n[stopwords] -> ;\n\n"
